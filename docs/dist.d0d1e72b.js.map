{"mappings":"A,I,E,A,W,iB,C,E,E,Q,C,E,Q,S,C,C,C,E,I,E,A,E,S,M,C,E,E,O,E,E,O,C,e,E,C,O,M,C,S,C,C,C,C,C,C,C,E,K,I,G,C,E,C,E,I,E,O,wB,C,E,G,C,C,G,C,Q,E,C,E,U,C,E,Q,E,E,Y,A,C,G,C,E,C,W,C,E,I,W,O,C,C,E,A,C,C,E,O,c,C,E,E,E,E,S,C,C,C,C,C,C,C,E,K,I,G,C,E,C,E,C,C,E,C,C,C,E,A,C,E,E,E,O,E,E,O,C,kB,E,C,O,M,C,S,C,C,C,E,O,c,C,E,U,C,W,C,E,M,C,E,E,S,C,C,C,E,E,O,C,C,C,E,E,E,O,E,E,O,C,Y,E,S,C,E,G,G,E,U,C,O,E,I,E,C,E,G,A,M,E,I,I,K,E,Y,G,O,S,C,c,C,I,C,E,I,E,E,E,G,O,E,E,G,C,E,E,E,O,E,E,O,C,e,E,S,C,E,O,G,E,U,C,E,C,Q,C,C,E,O,c,C,E,O,C,a,C,M,C,C,G,E,O,C,e,C,K,EEAA,IAAA,EAAA,EAAA,EAAA,UACA,EAAA,EAAA,EAAA,UAEA,EAAA,EAAA,EAAA,UACA,EAAA,EAAA,EAAA,U,I,E,E,S,E,E,S,E,E,SAMA,IAAM,EAAQ,AAAA,CAAA,EAAA,EAAA,OAAA,AAAA,EAAY,qBAEpB,EAA6B,AAGlC,GAEA,AACC,AAAuB,KAAA,IAAvB,EAAQ,UAAU,EAClB,EAAQ,IAAI,EACZ,CAAC,EAAI,IAAI,CAAC,EAAQ,IAAI,EAEf,CACN,GAAG,CAAO,CACV,WAAY,EAAQ,IAAI,AACxB,EAEK,CAkCR,OAAa,UAA4C,EADtD,KAAA,CAQF,YAAY,CAAgB,CAAE,CAAkC,CAAhE,CACC,KAAK,CAAC,GACN,IAAI,CAAC,OAAO,CAAG,CAAE,KAAM,KAAA,CAAS,EAChC,IAAI,CAAC,KAAK,CAAG,AAAiB,UAAjB,OAAO,EAAqB,IAAI,EAAA,GAAA,CAAI,GAAS,EAC1D,IAAI,CAAC,YAAY,CAAG,GAAM,SAAW,CAAA,EACrC,EAAM,4CAA6C,IAAI,CAAC,KAAK,CAAC,IAAI,EAGlE,IAAM,EAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAI,IAAI,CAAC,KAAK,CAAC,IAA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C,E,I,W,O,C,C,E,A,C,C,E,O,c,C,E,E,E,E,S,C,C,C,C,C,C,C,E,K,I,G,C,E,C,E,C,C,E,C,C,C,E,A,C,E,E,E,O,E,E,O,C,kB,E,C,O,M,C,S,C,C,C,E,O,c,C,E,U,C,W,C,E,M,C,E,E,S,C,C,C,E,E,O,C,C,C,E,E,E,O,E,E,O,C,Y,E,S,C,E,G,G,E,U,C,O,E,I,E,C,E,G,A,M,E,I,I,K,E,Y,G,O,S,C,c,C,I,C,E,I,E,E,E,G,O,E,E,G,C,E,E,E,O,E,E,O,C,Y,E,S,C,C,C,E,I,I,K,E,Y,G,O,S,C,c,C,I,C,E,I,E,E,E,E,E,O,c,C,E,O,C,a,C,M,C,C,G,E,O,C,K,C,K,EE7Db,IAAA,EAAA,EAAA,EAAA,UAEA,EAAA,EAAA,EAAA,U,I,E,E,SAIA,EAAA,EAAA,SAAA,EAAA,OAAA,EAeA,IAAM,EAAW,OAAO,yBAQxB,OAAsB,UAAc,EAAK,KAAK,CAO7C,YAAY,CAAwB,CAApC,CACC,KAAK,CAAC,GACN,IAAI,CAAC,EAAS,CAAG,CAAA,CAClB,CAUA,iBAAiB,CAA0B,CAA3C,CACC,GAAI,EAAS,CAIZ,GAAI,AAA2C,WAA3C,OAAQ,EAAgB,cAAc,CACzC,OAAO,EAAQ,cAAc,CAM9B,GAAI,AAA4B,UAA5B,OAAO,EAAQ,QAAQ,CAC1B,MAAO,AAAqB,WAArB,EAAQ,QAAQ,AAExB,CAKD,GAAM,CAAA,MAAE,CAAK,CAAE,CAAG,AAAI,cACtB,AAAqB,UAAjB,OAAO,GACJ,EACL,KAAK,CAAC,MACN,IAAI,CACJ,AAAC,GACA,AAA4B,KAA5B,EAAE,OAAO,CAAC,eACV,AAA6B,KAA7B,EAAE,OAAO,CAAC,eAEd,CAQQ,iBAAiB,CAAY,CAA7B,CAIP,GAAI,IAAI,CAAC,UAAU,GAAK,KAAY,IAAI,CAAC,eAAe,GAAK,IAC5D,OAAO,IAKH,CAAA,IAAI,CAAC,OAAO,CAAC,EAAK,EAEtB,CAAA,IAAI,CAAC,OAAO,CAAC,EAAK,CAAG,EAAE,AAAF,EAEtB,IAAM,EAAa,IAAI,EAAI,MAAM,CAAC,CAAE,SAAU,CAAA,CAAK,GAInD,OAHC,IAAI,CAAC,OAAO,CAAC,EAAsB,CAAC,IAAI,CAAC,GAE1C,IAAI,CAAC,gBAAgB,GACd,CACR,CAEQ,iBAAiB,CAAY,CAAE,CAAyB,CAAxD,CACP,GAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAK,EAAI,AAAW,OAAX,EAC1B,OAED,IAAM,EAAU,IAAI,CAAC,OAAO,CAAC,EAAqB,CAC5C,EAAQ,EAAQ,OAAO,CAAC,EAChB,CAAA,KAAV,IACH,EAAQ,MAAM,CAAC,EAAO,GAEtB,IAAI,CAAC,gBAAgB,GACE,IAAnB,EAAQ,MAAM,EAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAK,CAG5B,CAIA,QAAQ,CAAyB,CAAjC,OAKC,AAHC,CAAA,AAAkC,WAAlC,OAAO,EAAQ,cAAc,CAC1B,EAAQ,cAAc,CACtB,IAAI,CAAC,gBAAgB,CAAC,EAH1B,EAMQ,EAAA,KAAA,CAAW,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAE,GAGzC,KAAK,CAAC,QAAQ,EACtB,CAEA,aACC,CAAuB,CACvB,CAAyB,CACzB,CAA2C,CAH5C,CAKC,IAAM,EAAc,CACnB,GAAG,CAAO,CACV,eAAgB,IAAI,CAAC,gBAAgB,CAAC,EACtC,EACK,EAAO,IAAI,CAAC,OAAO,CAAC,GACpB,EAAa,IAAI,CAAC,gBAAgB,CAAC,GACzC,QAAQ,OAAO,GACb,IAAI,CAAC,IAAM,IAAI,CAAC,OAAO,CAAC,EAAK,IAC7B,IAAI,CACJ,AAAC,IAEA,GADA,IAAI,CAAC,gBAAgB,CAAC,EAAM,GACxB,aAAkB,EAAK,KAAK,CAC/B,GAAI,CAEH,OAAO,EAAO,UAAU,CAAC,EAAK,EAC9B,CAAC,MAAO,EAAc,CACtB,OAAO,EAAG,EACV,CAEF,IAAI,CAAC,EAAS,CAAC,aAAa,CAAG,EAE/B,KAAK,CAAC,aAAa,EAAK,EAAS,EAClC,EACA,AAAC,IACA,IAAI,CAAC,gBAAgB,CAAC,EAAM,GAC5B,EAAG,EACJ,EAEH,CAEA,kBAAA,CACC,IAAM,EAAS,IAAI,CAAC,EAAS,CAAC,aAAa,CAE3C,GADA,IAAI,CAAC,EAAS,CAAC,aAAa,CAAG,KAAA,EAC3B,CAAC,EACJ,MAAM,AAAI,MACT,sDAGF,OAAO,CACR,CAEA,IAAI,aAAJ,CACC,OACC,IAAI,CAAC,EAAS,CAAC,WAAW,EACzB,CAAA,AAAkB,WAAlB,IAAI,CAAC,QAAQ,CAAgB,IAAM,EAAA,CAEtC,CAEA,IAAI,YAAY,CAAS,CAAzB,CACK,IAAI,CAAC,EAAS,EACjB,CAAA,IAAI,CAAC,EAAS,CAAC,WAAW,CAAG,CAAA,CAE/B,CAEA,IAAI,UAAJ,CACC,OACC,IAAI,CAAC,EAAS,CAAC,QAAQ,EACtB,CAAA,IAAI,CAAC,gBAAgB,GAAK,SAAW,OAAA,CAExC,CAEA,IAAI,SAAS,CAAS,CAAtB,CACK,IAAI,CAAC,EAAS,EACjB,CAAA,IAAI,CAAC,EAAS,CAAC,QAAQ,CAAG,CAAA,CAE5B,CACA,CArLD,EAAA,OAAA,CAAA,KAAA,CAAA,C,G,E,Q,S,C,C,C,E,I,E,A,E,S,M,C,E,E,O,E,E,O,C,e,E,C,O,M,C,S,C,C,C,C,C,C,C,E,K,I,G,C,E,C,E,I,E,O,wB,C,E,G,C,C,G,C,Q,E,C,E,U,C,E,Q,E,E,Y,A,C,G,C,E,C,W,C,E,I,W,O,C,C,E,A,C,C,E,O,c,C,E,E,E,E,S,C,C,C,C,C,C,C,E,K,I,G,C,E,C,E,C,C,E,C,C,C,E,A,C,E,E,E,O,E,E,O,C,kB,E,C,O,M,C,S,C,C,C,E,O,c,C,E,U,C,W,C,E,M,C,E,E,S,C,C,C,E,E,O,C,C,C,E,E,E,O,E,E,O,C,Y,E,S,C,E,G,G,E,U,C,O,E,I,E,C,E,G,A,M,E,I,I,K,E,Y,G,O,S,C,c,C,I,C,E,I,E,E,E,G,O,E,E,G,C,E,O,c,C,E,O,C,a,C,M,C,C,G,E,O,C,G,C,E,O,C,I,C,E,O,C,Q,C,K,EE7BA,IAAA,EAAA,EAAA,EAAA,UACA,EAAA,EAAA,EAAA,UAOO,eAAe,EAAS,CAAgB,EAC9C,IAAI,EAAS,EACP,EAAmB,EAAE,CAC3B,UAAW,IAAM,KAAS,EACzB,GAAU,EAAM,MAAM,CACtB,EAAO,IAAI,CAAC,GAEb,OAAO,EAAO,MAAM,CAAC,EAAQ,EAC9B,CAGO,eAAe,EAAK,CAAgB,EAE1C,IAAM,EAAM,AADA,CAAA,MAAM,E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","sources":["<anon>","node_modules/https-proxy-agent/dist/index.js","node_modules/https-proxy-agent/src/index.ts","node_modules/agent-base/dist/index.js","node_modules/agent-base/src/index.ts","node_modules/agent-base/dist/helpers.js","node_modules/agent-base/src/helpers.ts","node_modules/https-proxy-agent/dist/parse-proxy-response.js","node_modules/https-proxy-agent/src/parse-proxy-response.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"2YoJF\", function(module, exports) {\n\nvar $6ZWSX = parcelRequire(\"6ZWSX\");\nvar $22a45f598e5d5219$require$Buffer = $6ZWSX.Buffer;\n\"use strict\";\nvar $22a45f598e5d5219$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar $22a45f598e5d5219$var$__setModuleDefault = module.exports && module.exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar $22a45f598e5d5219$var$__importStar = module.exports && module.exports.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) $22a45f598e5d5219$var$__createBinding(result, mod, k);\n    }\n    $22a45f598e5d5219$var$__setModuleDefault(result, mod);\n    return result;\n};\nvar $22a45f598e5d5219$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.HttpsProxyAgent = void 0;\n\nconst $22a45f598e5d5219$var$net = $22a45f598e5d5219$var$__importStar((parcelRequire(\"kjyEk\")));\n\nconst $22a45f598e5d5219$var$tls = $22a45f598e5d5219$var$__importStar((parcelRequire(\"kjyEk\")));\n\nconst $22a45f598e5d5219$var$assert_1 = $22a45f598e5d5219$var$__importDefault((parcelRequire(\"aLUwE\")));\n\nconst $22a45f598e5d5219$var$debug_1 = $22a45f598e5d5219$var$__importDefault((parcelRequire(\"1SXIy\")));\n\nvar $6BIfz = parcelRequire(\"6BIfz\");\n\nvar $biuEp = parcelRequire(\"biuEp\");\n\nvar $7SCeH = parcelRequire(\"7SCeH\");\nconst $22a45f598e5d5219$var$debug = (0, $22a45f598e5d5219$var$debug_1.default)('https-proxy-agent');\nconst $22a45f598e5d5219$var$setServernameFromNonIpHost = (options)=>{\n    if (options.servername === undefined && options.host && !$22a45f598e5d5219$var$net.isIP(options.host)) return {\n        ...options,\n        servername: options.host\n    };\n    return options;\n};\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */ class $22a45f598e5d5219$var$HttpsProxyAgent extends $6BIfz.Agent {\n    constructor(proxy, opts){\n        super(opts);\n        this.options = {\n            path: undefined\n        };\n        this.proxy = typeof proxy === 'string' ? new $biuEp.URL(proxy) : proxy;\n        this.proxyHeaders = opts?.headers ?? {};\n        $22a45f598e5d5219$var$debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n        // Trim off the brackets from IPv6 addresses\n        const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n        const port = this.proxy.port ? parseInt(this.proxy.port, 10) : this.proxy.protocol === 'https:' ? 443 : 80;\n        this.connectOpts = {\n            // Attempt to negotiate http/1.1 for proxy servers that support http/2\n            ALPNProtocols: [\n                'http/1.1'\n            ],\n            ...opts ? $22a45f598e5d5219$var$omit(opts, 'headers') : null,\n            host: host,\n            port: port\n        };\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     */ async connect(req, opts) {\n        const { proxy: proxy } = this;\n        if (!opts.host) throw new TypeError('No \"host\" provided');\n        // Create a socket connection to the proxy server.\n        let socket;\n        if (proxy.protocol === 'https:') {\n            $22a45f598e5d5219$var$debug('Creating `tls.Socket`: %o', this.connectOpts);\n            socket = $22a45f598e5d5219$var$tls.connect($22a45f598e5d5219$var$setServernameFromNonIpHost(this.connectOpts));\n        } else {\n            $22a45f598e5d5219$var$debug('Creating `net.Socket`: %o', this.connectOpts);\n            socket = $22a45f598e5d5219$var$net.connect(this.connectOpts);\n        }\n        const headers = typeof this.proxyHeaders === 'function' ? this.proxyHeaders() : {\n            ...this.proxyHeaders\n        };\n        const host = $22a45f598e5d5219$var$net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n        let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n        // Inject the `Proxy-Authorization` header if necessary.\n        if (proxy.username || proxy.password) {\n            const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n            headers['Proxy-Authorization'] = `Basic ${$22a45f598e5d5219$require$Buffer.from(auth).toString('base64')}`;\n        }\n        headers.Host = `${host}:${opts.port}`;\n        if (!headers['Proxy-Connection']) headers['Proxy-Connection'] = this.keepAlive ? 'Keep-Alive' : 'close';\n        for (const name of Object.keys(headers))payload += `${name}: ${headers[name]}\\r\\n`;\n        const proxyResponsePromise = (0, $7SCeH.parseProxyResponse)(socket);\n        socket.write(`${payload}\\r\\n`);\n        const { connect: connect, buffered: buffered } = await proxyResponsePromise;\n        req.emit('proxyConnect', connect);\n        this.emit('proxyConnect', connect, req);\n        if (connect.statusCode === 200) {\n            req.once('socket', $22a45f598e5d5219$var$resume);\n            if (opts.secureEndpoint) {\n                // The proxy is connecting to a TLS server, so upgrade\n                // this socket connection to a TLS connection.\n                $22a45f598e5d5219$var$debug('Upgrading socket connection to TLS');\n                return $22a45f598e5d5219$var$tls.connect({\n                    ...$22a45f598e5d5219$var$omit($22a45f598e5d5219$var$setServernameFromNonIpHost(opts), 'host', 'path', 'port'),\n                    socket: socket\n                });\n            }\n            return socket;\n        }\n        // Some other status code that's not 200... need to re-play the HTTP\n        // header \"data\" events onto the socket once the HTTP machinery is\n        // attached so that the node core `http` can parse and handle the\n        // error status code.\n        // Close the original socket, and a new \"fake\" socket is returned\n        // instead, so that the proxy doesn't get the HTTP request\n        // written to it (which may contain `Authorization` headers or other\n        // sensitive data).\n        //\n        // See: https://hackerone.com/reports/541502\n        socket.destroy();\n        const fakeSocket = new $22a45f598e5d5219$var$net.Socket({\n            writable: false\n        });\n        fakeSocket.readable = true;\n        // Need to wait for the \"socket\" event to re-play the \"data\" events.\n        req.once('socket', (s)=>{\n            $22a45f598e5d5219$var$debug('Replaying proxy buffer for failed request');\n            (0, $22a45f598e5d5219$var$assert_1.default)(s.listenerCount('data') > 0);\n            // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n            // this point the HTTP module machinery has been hooked up for\n            // the user.\n            s.push(buffered);\n            s.push(null);\n        });\n        return fakeSocket;\n    }\n}\n$22a45f598e5d5219$var$HttpsProxyAgent.protocols = [\n    'http',\n    'https'\n];\nmodule.exports.HttpsProxyAgent = $22a45f598e5d5219$var$HttpsProxyAgent;\nfunction $22a45f598e5d5219$var$resume(socket) {\n    socket.resume();\n}\nfunction $22a45f598e5d5219$var$omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for(key in obj)if (!keys.includes(key)) ret[key] = obj[key];\n    return ret;\n}\n\n});\nparcelRegister(\"6BIfz\", function(module, exports) {\n\"use strict\";\nvar $4cf885f0d48ae4f9$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar $4cf885f0d48ae4f9$var$__setModuleDefault = module.exports && module.exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar $4cf885f0d48ae4f9$var$__importStar = module.exports && module.exports.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) $4cf885f0d48ae4f9$var$__createBinding(result, mod, k);\n    }\n    $4cf885f0d48ae4f9$var$__setModuleDefault(result, mod);\n    return result;\n};\nvar $4cf885f0d48ae4f9$var$__exportStar = module.exports && module.exports.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) $4cf885f0d48ae4f9$var$__createBinding(exports1, m, p);\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Agent = void 0;\n\nconst $4cf885f0d48ae4f9$var$net = $4cf885f0d48ae4f9$var$__importStar((parcelRequire(\"kjyEk\")));\n\nconst $4cf885f0d48ae4f9$var$http = $4cf885f0d48ae4f9$var$__importStar((parcelRequire(\"k6Qs9\")));\n\nvar $cgLmW = parcelRequire(\"cgLmW\");\n\n$4cf885f0d48ae4f9$var$__exportStar((parcelRequire(\"iv1c4\")), module.exports);\nconst $4cf885f0d48ae4f9$var$INTERNAL = Symbol('AgentBaseInternalState');\nclass $4cf885f0d48ae4f9$var$Agent extends $4cf885f0d48ae4f9$var$http.Agent {\n    constructor(opts){\n        super(opts);\n        this[$4cf885f0d48ae4f9$var$INTERNAL] = {};\n    }\n    /**\n     * Determine whether this is an `http` or `https` request.\n     */ isSecureEndpoint(options) {\n        if (options) {\n            // First check the `secureEndpoint` property explicitly, since this\n            // means that a parent `Agent` is \"passing through\" to this instance.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (typeof options.secureEndpoint === 'boolean') return options.secureEndpoint;\n            // If no explicit `secure` endpoint, check if `protocol` property is\n            // set. This will usually be the case since using a full string URL\n            // or `URL` instance should be the most common usage.\n            if (typeof options.protocol === 'string') return options.protocol === 'https:';\n        }\n        // Finally, if no `protocol` property was set, then fall back to\n        // checking the stack trace of the current call stack, and try to\n        // detect the \"https\" module.\n        const { stack: stack } = new Error();\n        if (typeof stack !== 'string') return false;\n        return stack.split('\\n').some((l)=>l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n    }\n    // In order to support async signatures in `connect()` and Node's native\n    // connection pooling in `http.Agent`, the array of sockets for each origin\n    // has to be updated synchronously. This is so the length of the array is\n    // accurate when `addRequest()` is next called. We achieve this by creating a\n    // fake socket and adding it to `sockets[origin]` and incrementing\n    // `totalSocketCount`.\n    incrementSockets(name) {\n        // If `maxSockets` and `maxTotalSockets` are both Infinity then there is no\n        // need to create a fake socket because Node.js native connection pooling\n        // will never be invoked.\n        if (this.maxSockets === Infinity && this.maxTotalSockets === Infinity) return null;\n        // All instances of `sockets` are expected TypeScript errors. The\n        // alternative is to add it as a private property of this class but that\n        // will break TypeScript subclassing.\n        if (!this.sockets[name]) // @ts-expect-error `sockets` is readonly in `@types/node`\n        this.sockets[name] = [];\n        const fakeSocket = new $4cf885f0d48ae4f9$var$net.Socket({\n            writable: false\n        });\n        this.sockets[name].push(fakeSocket);\n        // @ts-expect-error `totalSocketCount` isn't defined in `@types/node`\n        this.totalSocketCount++;\n        return fakeSocket;\n    }\n    decrementSockets(name, socket) {\n        if (!this.sockets[name] || socket === null) return;\n        const sockets = this.sockets[name];\n        const index = sockets.indexOf(socket);\n        if (index !== -1) {\n            sockets.splice(index, 1);\n            // @ts-expect-error  `totalSocketCount` isn't defined in `@types/node`\n            this.totalSocketCount--;\n            if (sockets.length === 0) // @ts-expect-error `sockets` is readonly in `@types/node`\n            delete this.sockets[name];\n        }\n    }\n    // In order to properly update the socket pool, we need to call `getName()` on\n    // the core `https.Agent` if it is a secureEndpoint.\n    getName(options) {\n        const secureEndpoint = typeof options.secureEndpoint === 'boolean' ? options.secureEndpoint : this.isSecureEndpoint(options);\n        if (secureEndpoint) // @ts-expect-error `getName()` isn't defined in `@types/node`\n        return $cgLmW.Agent.prototype.getName.call(this, options);\n        // @ts-expect-error `getName()` isn't defined in `@types/node`\n        return super.getName(options);\n    }\n    createSocket(req, options, cb) {\n        const connectOpts = {\n            ...options,\n            secureEndpoint: this.isSecureEndpoint(options)\n        };\n        const name = this.getName(connectOpts);\n        const fakeSocket = this.incrementSockets(name);\n        Promise.resolve().then(()=>this.connect(req, connectOpts)).then((socket)=>{\n            this.decrementSockets(name, fakeSocket);\n            if (socket instanceof $4cf885f0d48ae4f9$var$http.Agent) try {\n                // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n                return socket.addRequest(req, connectOpts);\n            } catch (err) {\n                return cb(err);\n            }\n            this[$4cf885f0d48ae4f9$var$INTERNAL].currentSocket = socket;\n            // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n            super.createSocket(req, options, cb);\n        }, (err)=>{\n            this.decrementSockets(name, fakeSocket);\n            cb(err);\n        });\n    }\n    createConnection() {\n        const socket = this[$4cf885f0d48ae4f9$var$INTERNAL].currentSocket;\n        this[$4cf885f0d48ae4f9$var$INTERNAL].currentSocket = undefined;\n        if (!socket) throw new Error('No socket was returned in the `connect()` function');\n        return socket;\n    }\n    get defaultPort() {\n        return this[$4cf885f0d48ae4f9$var$INTERNAL].defaultPort ?? (this.protocol === 'https:' ? 443 : 80);\n    }\n    set defaultPort(v) {\n        if (this[$4cf885f0d48ae4f9$var$INTERNAL]) this[$4cf885f0d48ae4f9$var$INTERNAL].defaultPort = v;\n    }\n    get protocol() {\n        return this[$4cf885f0d48ae4f9$var$INTERNAL].protocol ?? (this.isSecureEndpoint() ? 'https:' : 'http:');\n    }\n    set protocol(v) {\n        if (this[$4cf885f0d48ae4f9$var$INTERNAL]) this[$4cf885f0d48ae4f9$var$INTERNAL].protocol = v;\n    }\n}\nmodule.exports.Agent = $4cf885f0d48ae4f9$var$Agent;\n\n});\nparcelRegister(\"iv1c4\", function(module, exports) {\n\nvar $6ZWSX = parcelRequire(\"6ZWSX\");\nvar $d77c0c48fe0394c7$require$Buffer = $6ZWSX.Buffer;\n\"use strict\";\nvar $d77c0c48fe0394c7$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar $d77c0c48fe0394c7$var$__setModuleDefault = module.exports && module.exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar $d77c0c48fe0394c7$var$__importStar = module.exports && module.exports.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) $d77c0c48fe0394c7$var$__createBinding(result, mod, k);\n    }\n    $d77c0c48fe0394c7$var$__setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.req = module.exports.json = module.exports.toBuffer = void 0;\n\nconst $d77c0c48fe0394c7$var$http = $d77c0c48fe0394c7$var$__importStar((parcelRequire(\"k6Qs9\")));\n\nconst $d77c0c48fe0394c7$var$https = $d77c0c48fe0394c7$var$__importStar((parcelRequire(\"cgLmW\")));\nasync function $d77c0c48fe0394c7$var$toBuffer(stream) {\n    let length = 0;\n    const chunks = [];\n    for await (const chunk of stream){\n        length += chunk.length;\n        chunks.push(chunk);\n    }\n    return $d77c0c48fe0394c7$require$Buffer.concat(chunks, length);\n}\nmodule.exports.toBuffer = $d77c0c48fe0394c7$var$toBuffer;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function $d77c0c48fe0394c7$var$json(stream) {\n    const buf = await $d77c0c48fe0394c7$var$toBuffer(stream);\n    const str = buf.toString('utf8');\n    try {\n        return JSON.parse(str);\n    } catch (_err) {\n        const err = _err;\n        err.message += ` (input: ${str})`;\n        throw err;\n    }\n}\nmodule.exports.json = $d77c0c48fe0394c7$var$json;\nfunction $d77c0c48fe0394c7$var$req(url, opts = {}) {\n    const href = typeof url === 'string' ? url : url.href;\n    const req1 = (href.startsWith('https:') ? $d77c0c48fe0394c7$var$https : $d77c0c48fe0394c7$var$http).request(url, opts);\n    const promise = new Promise((resolve, reject)=>{\n        req1.once('response', resolve).once('error', reject).end();\n    });\n    req1.then = promise.then.bind(promise);\n    return req1;\n}\nmodule.exports.req = $d77c0c48fe0394c7$var$req;\n\n});\n\n\nparcelRegister(\"7SCeH\", function(module, exports) {\n\nvar $6ZWSX = parcelRequire(\"6ZWSX\");\nvar $5bcb3c7120336448$require$Buffer = $6ZWSX.Buffer;\n\"use strict\";\nvar $5bcb3c7120336448$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.parseProxyResponse = void 0;\n\nconst $5bcb3c7120336448$var$debug_1 = $5bcb3c7120336448$var$__importDefault((parcelRequire(\"1SXIy\")));\nconst $5bcb3c7120336448$var$debug = (0, $5bcb3c7120336448$var$debug_1.default)('https-proxy-agent:parse-proxy-response');\nfunction $5bcb3c7120336448$var$parseProxyResponse(socket) {\n    return new Promise((resolve, reject)=>{\n        // we need to buffer any HTTP traffic that happens with the proxy before we get\n        // the CONNECT response, so that if the response is anything other than an \"200\"\n        // response code, then we can re-play the \"data\" events on the socket once the\n        // HTTP parser is hooked up...\n        let buffersLength = 0;\n        const buffers = [];\n        function read() {\n            const b = socket.read();\n            if (b) ondata(b);\n            else socket.once('readable', read);\n        }\n        function cleanup() {\n            socket.removeListener('end', onend);\n            socket.removeListener('error', onerror);\n            socket.removeListener('readable', read);\n        }\n        function onend() {\n            cleanup();\n            $5bcb3c7120336448$var$debug('onend');\n            reject(new Error('Proxy connection ended before receiving CONNECT response'));\n        }\n        function onerror(err) {\n            cleanup();\n            $5bcb3c7120336448$var$debug('onerror %o', err);\n            reject(err);\n        }\n        function ondata(b) {\n            buffers.push(b);\n            buffersLength += b.length;\n            const buffered = $5bcb3c7120336448$require$Buffer.concat(buffers, buffersLength);\n            const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n            if (endOfHeaders === -1) {\n                // keep buffering\n                $5bcb3c7120336448$var$debug('have not received end of HTTP headers yet...');\n                read();\n                return;\n            }\n            const headerParts = buffered.slice(0, endOfHeaders).toString('ascii').split('\\r\\n');\n            const firstLine = headerParts.shift();\n            if (!firstLine) {\n                socket.destroy();\n                return reject(new Error('No header received from proxy CONNECT response'));\n            }\n            const firstLineParts = firstLine.split(' ');\n            const statusCode = +firstLineParts[1];\n            const statusText = firstLineParts.slice(2).join(' ');\n            const headers = {};\n            for (const header of headerParts){\n                if (!header) continue;\n                const firstColon = header.indexOf(':');\n                if (firstColon === -1) {\n                    socket.destroy();\n                    return reject(new Error(`Invalid header from proxy CONNECT response: \"${header}\"`));\n                }\n                const key = header.slice(0, firstColon).toLowerCase();\n                const value = header.slice(firstColon + 1).trimStart();\n                const current = headers[key];\n                if (typeof current === 'string') headers[key] = [\n                    current,\n                    value\n                ];\n                else if (Array.isArray(current)) current.push(value);\n                else headers[key] = value;\n            }\n            $5bcb3c7120336448$var$debug('got proxy server response: %o %o', firstLine, headers);\n            cleanup();\n            resolve({\n                connect: {\n                    statusCode: statusCode,\n                    statusText: statusText,\n                    headers: headers\n                },\n                buffered: buffered\n            });\n        }\n        socket.on('error', onerror);\n        socket.on('end', onend);\n        read();\n    });\n}\nmodule.exports.parseProxyResponse = $5bcb3c7120336448$var$parseProxyResponse;\n\n});\n\n\n\n//# sourceMappingURL=dist.d0d1e72b.js.map\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpsProxyAgent = void 0;\nconst net = __importStar(require(\"net\"));\nconst tls = __importStar(require(\"tls\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst agent_base_1 = require(\"agent-base\");\nconst url_1 = require(\"url\");\nconst parse_proxy_response_1 = require(\"./parse-proxy-response\");\nconst debug = (0, debug_1.default)('https-proxy-agent');\nconst setServernameFromNonIpHost = (options) => {\n    if (options.servername === undefined &&\n        options.host &&\n        !net.isIP(options.host)) {\n        return {\n            ...options,\n            servername: options.host,\n        };\n    }\n    return options;\n};\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\nclass HttpsProxyAgent extends agent_base_1.Agent {\n    constructor(proxy, opts) {\n        super(opts);\n        this.options = { path: undefined };\n        this.proxy = typeof proxy === 'string' ? new url_1.URL(proxy) : proxy;\n        this.proxyHeaders = opts?.headers ?? {};\n        debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n        // Trim off the brackets from IPv6 addresses\n        const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n        const port = this.proxy.port\n            ? parseInt(this.proxy.port, 10)\n            : this.proxy.protocol === 'https:'\n                ? 443\n                : 80;\n        this.connectOpts = {\n            // Attempt to negotiate http/1.1 for proxy servers that support http/2\n            ALPNProtocols: ['http/1.1'],\n            ...(opts ? omit(opts, 'headers') : null),\n            host,\n            port,\n        };\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     */\n    async connect(req, opts) {\n        const { proxy } = this;\n        if (!opts.host) {\n            throw new TypeError('No \"host\" provided');\n        }\n        // Create a socket connection to the proxy server.\n        let socket;\n        if (proxy.protocol === 'https:') {\n            debug('Creating `tls.Socket`: %o', this.connectOpts);\n            socket = tls.connect(setServernameFromNonIpHost(this.connectOpts));\n        }\n        else {\n            debug('Creating `net.Socket`: %o', this.connectOpts);\n            socket = net.connect(this.connectOpts);\n        }\n        const headers = typeof this.proxyHeaders === 'function'\n            ? this.proxyHeaders()\n            : { ...this.proxyHeaders };\n        const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n        let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n        // Inject the `Proxy-Authorization` header if necessary.\n        if (proxy.username || proxy.password) {\n            const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n            headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n        }\n        headers.Host = `${host}:${opts.port}`;\n        if (!headers['Proxy-Connection']) {\n            headers['Proxy-Connection'] = this.keepAlive\n                ? 'Keep-Alive'\n                : 'close';\n        }\n        for (const name of Object.keys(headers)) {\n            payload += `${name}: ${headers[name]}\\r\\n`;\n        }\n        const proxyResponsePromise = (0, parse_proxy_response_1.parseProxyResponse)(socket);\n        socket.write(`${payload}\\r\\n`);\n        const { connect, buffered } = await proxyResponsePromise;\n        req.emit('proxyConnect', connect);\n        this.emit('proxyConnect', connect, req);\n        if (connect.statusCode === 200) {\n            req.once('socket', resume);\n            if (opts.secureEndpoint) {\n                // The proxy is connecting to a TLS server, so upgrade\n                // this socket connection to a TLS connection.\n                debug('Upgrading socket connection to TLS');\n                return tls.connect({\n                    ...omit(setServernameFromNonIpHost(opts), 'host', 'path', 'port'),\n                    socket,\n                });\n            }\n            return socket;\n        }\n        // Some other status code that's not 200... need to re-play the HTTP\n        // header \"data\" events onto the socket once the HTTP machinery is\n        // attached so that the node core `http` can parse and handle the\n        // error status code.\n        // Close the original socket, and a new \"fake\" socket is returned\n        // instead, so that the proxy doesn't get the HTTP request\n        // written to it (which may contain `Authorization` headers or other\n        // sensitive data).\n        //\n        // See: https://hackerone.com/reports/541502\n        socket.destroy();\n        const fakeSocket = new net.Socket({ writable: false });\n        fakeSocket.readable = true;\n        // Need to wait for the \"socket\" event to re-play the \"data\" events.\n        req.once('socket', (s) => {\n            debug('Replaying proxy buffer for failed request');\n            (0, assert_1.default)(s.listenerCount('data') > 0);\n            // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n            // this point the HTTP module machinery has been hooked up for\n            // the user.\n            s.push(buffered);\n            s.push(null);\n        });\n        return fakeSocket;\n    }\n}\nHttpsProxyAgent.protocols = ['http', 'https'];\nexports.HttpsProxyAgent = HttpsProxyAgent;\nfunction resume(socket) {\n    socket.resume();\n}\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=index.js.map",null,"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Agent = void 0;\nconst net = __importStar(require(\"net\"));\nconst http = __importStar(require(\"http\"));\nconst https_1 = require(\"https\");\n__exportStar(require(\"./helpers\"), exports);\nconst INTERNAL = Symbol('AgentBaseInternalState');\nclass Agent extends http.Agent {\n    constructor(opts) {\n        super(opts);\n        this[INTERNAL] = {};\n    }\n    /**\n     * Determine whether this is an `http` or `https` request.\n     */\n    isSecureEndpoint(options) {\n        if (options) {\n            // First check the `secureEndpoint` property explicitly, since this\n            // means that a parent `Agent` is \"passing through\" to this instance.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (typeof options.secureEndpoint === 'boolean') {\n                return options.secureEndpoint;\n            }\n            // If no explicit `secure` endpoint, check if `protocol` property is\n            // set. This will usually be the case since using a full string URL\n            // or `URL` instance should be the most common usage.\n            if (typeof options.protocol === 'string') {\n                return options.protocol === 'https:';\n            }\n        }\n        // Finally, if no `protocol` property was set, then fall back to\n        // checking the stack trace of the current call stack, and try to\n        // detect the \"https\" module.\n        const { stack } = new Error();\n        if (typeof stack !== 'string')\n            return false;\n        return stack\n            .split('\\n')\n            .some((l) => l.indexOf('(https.js:') !== -1 ||\n            l.indexOf('node:https:') !== -1);\n    }\n    // In order to support async signatures in `connect()` and Node's native\n    // connection pooling in `http.Agent`, the array of sockets for each origin\n    // has to be updated synchronously. This is so the length of the array is\n    // accurate when `addRequest()` is next called. We achieve this by creating a\n    // fake socket and adding it to `sockets[origin]` and incrementing\n    // `totalSocketCount`.\n    incrementSockets(name) {\n        // If `maxSockets` and `maxTotalSockets` are both Infinity then there is no\n        // need to create a fake socket because Node.js native connection pooling\n        // will never be invoked.\n        if (this.maxSockets === Infinity && this.maxTotalSockets === Infinity) {\n            return null;\n        }\n        // All instances of `sockets` are expected TypeScript errors. The\n        // alternative is to add it as a private property of this class but that\n        // will break TypeScript subclassing.\n        if (!this.sockets[name]) {\n            // @ts-expect-error `sockets` is readonly in `@types/node`\n            this.sockets[name] = [];\n        }\n        const fakeSocket = new net.Socket({ writable: false });\n        this.sockets[name].push(fakeSocket);\n        // @ts-expect-error `totalSocketCount` isn't defined in `@types/node`\n        this.totalSocketCount++;\n        return fakeSocket;\n    }\n    decrementSockets(name, socket) {\n        if (!this.sockets[name] || socket === null) {\n            return;\n        }\n        const sockets = this.sockets[name];\n        const index = sockets.indexOf(socket);\n        if (index !== -1) {\n            sockets.splice(index, 1);\n            // @ts-expect-error  `totalSocketCount` isn't defined in `@types/node`\n            this.totalSocketCount--;\n            if (sockets.length === 0) {\n                // @ts-expect-error `sockets` is readonly in `@types/node`\n                delete this.sockets[name];\n            }\n        }\n    }\n    // In order to properly update the socket pool, we need to call `getName()` on\n    // the core `https.Agent` if it is a secureEndpoint.\n    getName(options) {\n        const secureEndpoint = typeof options.secureEndpoint === 'boolean'\n            ? options.secureEndpoint\n            : this.isSecureEndpoint(options);\n        if (secureEndpoint) {\n            // @ts-expect-error `getName()` isn't defined in `@types/node`\n            return https_1.Agent.prototype.getName.call(this, options);\n        }\n        // @ts-expect-error `getName()` isn't defined in `@types/node`\n        return super.getName(options);\n    }\n    createSocket(req, options, cb) {\n        const connectOpts = {\n            ...options,\n            secureEndpoint: this.isSecureEndpoint(options),\n        };\n        const name = this.getName(connectOpts);\n        const fakeSocket = this.incrementSockets(name);\n        Promise.resolve()\n            .then(() => this.connect(req, connectOpts))\n            .then((socket) => {\n            this.decrementSockets(name, fakeSocket);\n            if (socket instanceof http.Agent) {\n                try {\n                    // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n                    return socket.addRequest(req, connectOpts);\n                }\n                catch (err) {\n                    return cb(err);\n                }\n            }\n            this[INTERNAL].currentSocket = socket;\n            // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n            super.createSocket(req, options, cb);\n        }, (err) => {\n            this.decrementSockets(name, fakeSocket);\n            cb(err);\n        });\n    }\n    createConnection() {\n        const socket = this[INTERNAL].currentSocket;\n        this[INTERNAL].currentSocket = undefined;\n        if (!socket) {\n            throw new Error('No socket was returned in the `connect()` function');\n        }\n        return socket;\n    }\n    get defaultPort() {\n        return (this[INTERNAL].defaultPort ??\n            (this.protocol === 'https:' ? 443 : 80));\n    }\n    set defaultPort(v) {\n        if (this[INTERNAL]) {\n            this[INTERNAL].defaultPort = v;\n        }\n    }\n    get protocol() {\n        return (this[INTERNAL].protocol ??\n            (this.isSecureEndpoint() ? 'https:' : 'http:'));\n    }\n    set protocol(v) {\n        if (this[INTERNAL]) {\n            this[INTERNAL].protocol = v;\n        }\n    }\n}\nexports.Agent = Agent;\n//# sourceMappingURL=index.js.map",null,"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.req = exports.json = exports.toBuffer = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nasync function toBuffer(stream) {\n    let length = 0;\n    const chunks = [];\n    for await (const chunk of stream) {\n        length += chunk.length;\n        chunks.push(chunk);\n    }\n    return Buffer.concat(chunks, length);\n}\nexports.toBuffer = toBuffer;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function json(stream) {\n    const buf = await toBuffer(stream);\n    const str = buf.toString('utf8');\n    try {\n        return JSON.parse(str);\n    }\n    catch (_err) {\n        const err = _err;\n        err.message += ` (input: ${str})`;\n        throw err;\n    }\n}\nexports.json = json;\nfunction req(url, opts = {}) {\n    const href = typeof url === 'string' ? url : url.href;\n    const req = (href.startsWith('https:') ? https : http).request(url, opts);\n    const promise = new Promise((resolve, reject) => {\n        req\n            .once('response', resolve)\n            .once('error', reject)\n            .end();\n    });\n    req.then = promise.then.bind(promise);\n    return req;\n}\nexports.req = req;\n//# sourceMappingURL=helpers.js.map",null,"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseProxyResponse = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)('https-proxy-agent:parse-proxy-response');\nfunction parseProxyResponse(socket) {\n    return new Promise((resolve, reject) => {\n        // we need to buffer any HTTP traffic that happens with the proxy before we get\n        // the CONNECT response, so that if the response is anything other than an \"200\"\n        // response code, then we can re-play the \"data\" events on the socket once the\n        // HTTP parser is hooked up...\n        let buffersLength = 0;\n        const buffers = [];\n        function read() {\n            const b = socket.read();\n            if (b)\n                ondata(b);\n            else\n                socket.once('readable', read);\n        }\n        function cleanup() {\n            socket.removeListener('end', onend);\n            socket.removeListener('error', onerror);\n            socket.removeListener('readable', read);\n        }\n        function onend() {\n            cleanup();\n            debug('onend');\n            reject(new Error('Proxy connection ended before receiving CONNECT response'));\n        }\n        function onerror(err) {\n            cleanup();\n            debug('onerror %o', err);\n            reject(err);\n        }\n        function ondata(b) {\n            buffers.push(b);\n            buffersLength += b.length;\n            const buffered = Buffer.concat(buffers, buffersLength);\n            const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n            if (endOfHeaders === -1) {\n                // keep buffering\n                debug('have not received end of HTTP headers yet...');\n                read();\n                return;\n            }\n            const headerParts = buffered\n                .slice(0, endOfHeaders)\n                .toString('ascii')\n                .split('\\r\\n');\n            const firstLine = headerParts.shift();\n            if (!firstLine) {\n                socket.destroy();\n                return reject(new Error('No header received from proxy CONNECT response'));\n            }\n            const firstLineParts = firstLine.split(' ');\n            const statusCode = +firstLineParts[1];\n            const statusText = firstLineParts.slice(2).join(' ');\n            const headers = {};\n            for (const header of headerParts) {\n                if (!header)\n                    continue;\n                const firstColon = header.indexOf(':');\n                if (firstColon === -1) {\n                    socket.destroy();\n                    return reject(new Error(`Invalid header from proxy CONNECT response: \"${header}\"`));\n                }\n                const key = header.slice(0, firstColon).toLowerCase();\n                const value = header.slice(firstColon + 1).trimStart();\n                const current = headers[key];\n                if (typeof current === 'string') {\n                    headers[key] = [current, value];\n                }\n                else if (Array.isArray(current)) {\n                    current.push(value);\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n            debug('got proxy server response: %o %o', firstLine, headers);\n            cleanup();\n            resolve({\n                connect: {\n                    statusCode,\n                    statusText,\n                    headers,\n                },\n                buffered,\n            });\n        }\n        socket.on('error', onerror);\n        socket.on('end', onend);\n        read();\n    });\n}\nexports.parseProxyResponse = parseProxyResponse;\n//# sourceMappingURL=parse-proxy-response.js.map",null],"names":["parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$22a45f598e5d5219$require$Buffer","$6ZWSX","Buffer","$22a45f598e5d5219$var$__createBinding","__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","$22a45f598e5d5219$var$__setModuleDefault","__setModuleDefault","v","value","$22a45f598e5d5219$var$__importStar","__importStar","mod","result","prototype","hasOwnProperty","call","$22a45f598e5d5219$var$__importDefault","__importDefault","HttpsProxyAgent","$22a45f598e5d5219$var$net","$22a45f598e5d5219$var$tls","$22a45f598e5d5219$var$assert_1","$22a45f598e5d5219$var$debug_1","$6BIfz","$biuEp","$7SCeH","$22a45f598e5d5219$var$debug","default","$22a45f598e5d5219$var$setServernameFromNonIpHost","options","servername","host","isIP","$22a45f598e5d5219$var$HttpsProxyAgent","Agent","constructor","proxy","opts","path","URL","proxyHeaders","headers","href","hostname","replace","port","parseInt","protocol","connectOpts","ALPNProtocols","$22a45f598e5d5219$var$omit","connect","req","socket","TypeError","isIPv6","payload","username","password","auth","decodeURIComponent","from","toString","name","Host","keepAlive","keys","proxyResponsePromise","parseProxyResponse","write","buffered","emit","statusCode","once","$22a45f598e5d5219$var$resume","secureEndpoint","destroy","fakeSocket","Socket","readable","s","listenerCount","push","resume","obj","key","ret","includes","protocols","$4cf885f0d48ae4f9$var$__createBinding","$4cf885f0d48ae4f9$var$__setModuleDefault","$4cf885f0d48ae4f9$var$__importStar","$4cf885f0d48ae4f9$var$__exportStar","__exportStar","exports1","p","$4cf885f0d48ae4f9$var$net","$4cf885f0d48ae4f9$var$http","$cgLmW","$4cf885f0d48ae4f9$var$INTERNAL","Symbol","$4cf885f0d48ae4f9$var$Agent","isSecureEndpoint","stack","Error","split","some","l","indexOf","incrementSockets","maxSockets","Infinity","maxTotalSockets","sockets","totalSocketCount","decrementSockets","index","splice","length","getName","createSocket","cb","Promise","resolve","then","addRequest","err","currentSocket","createConnection","defaultPort","$d77c0c48fe0394c7$require$Buffer","$d77c0c48fe0394c7$var$__createBinding","$d77c0c48fe0394c7$var$__setModuleDefault","$d77c0c48fe0394c7$var$__importStar","json","toBuffer","$d77c0c48fe0394c7$var$http","$d77c0c48fe0394c7$var$https","$d77c0c48fe0394c7$var$toBuffer","stream","chunks","chunk","concat","$d77c0c48fe0394c7$var$json","str","buf","JSON","parse","_err","message","url","req1","startsWith","request","promise","reject","end","bind","$5bcb3c7120336448$require$Buffer","$5bcb3c7120336448$var$__importDefault","$5bcb3c7120336448$var$debug","$5bcb3c7120336448$var$debug_1","buffersLength","buffers","read","b","ondata","endOfHeaders","headerParts","slice","firstLine","shift","firstLineParts","statusText","join","header","firstColon","toLowerCase","trimStart","current","Array","isArray","cleanup","removeListener","onend","onerror","on"],"version":3,"file":"dist.d0d1e72b.js.map"}